#summary KVS プログラムの作成と実行
#sidebar table_of_contents_jp

= 2.1 プログラムの作成と実行 =
ここでは、現在利用しているKVSのバージョン番号を表示するプログラムの作成をとおして、プログラムの「作成→コンパイル→実行」といった一連の流れおよびその手段について説明します。

== 2.1.1 作成 ==
最初に、作業用フォルダを作成します。「lesson1」という名前のフォルダを作成し、そのフォルダ内に「main.cpp」という名前のファイルを作成してください。このとき、ファイルの拡張子は、必ず「cpp」としてください。

KVSのバージョン番号は、メジャーバージョン、マイナーバージョン、パッチバージョンの3つの番号からなります。通常、「メジャーバージョン.マイナーバージョン.パッチバージョン」というようにそれぞれ「.」で区切って表しています。それぞれの番号は、以下の3つのメソッドを利用して取得することができます。

{{{
size_t major = kvs::Version::MajorVersion(); // メジャーバージョン番号の取得
size_t minor = kvs::Version::MinorVersion(); // マイナーバージョン番号の取得
size_t patch = kvs::Version::PatchVersion(); // パッチバージョン番号の取得
}}}

KVSに実装されているすべてのクラスおよびメソッドは、名前空間「kvs」内に定義されています。上記の例では、たとえば、「kvs::Version::!MajorVersion()」は、「名前空間kvsに定義されているVersion::!MajorVersionメソッド」を表しています。

これらのメソッドを利用するときには、適切にヘッダファイルをインクルードする必要があります。KVSでは、利用したいクラスに対して、「#include <kvs/クラス名>」または「#include <kvs/名前空間名>」という形式で記述します。

先の3つのメソッドに対しては、以下のようにしてヘッダファイルをインクルードします。

{{{
#include <kvs/Version>
}}}

これらのメソッドを利用してKVSのバージョン番号を表示するプログラムを以下に示します。エディタでmain.cppを開き、以下を記述した後、保存してください。

{{{
#include <kvs/Version>
#include <iostream>

int main( void )
{
    size_t major = kvs::Version::MajorVersion(); // メジャーバージョン番号の取得
    size_t minor = kvs::Version::MinorVersion(); // マイナーバージョン番号の取得
    size_t patch = kvs::Version::PatchVersion(); // パッチバージョン番号の取得

    // バージョン情報を表示する。
    std::cout << "KVS " << major << "." << minor << "." << patch << std::endl;

    return 0;
}
}}}

== 2.1.2 コンパイル ==
次に、作成したプログラムをコンパイルします。

== 2.1.3 実行 ==
最後に、プログラムの実行方法について確認します。