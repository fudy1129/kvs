#summary KVS スタイル規約
#sidebar table_of_contents_jp

= 9.1 スタイル規約 =
字下げや括弧の位置などソースコードの見栄えに関する規約をまとめます。一部のプログラム言語を除き、スタイル自体はプログラムの処理に影響を与えるものではなく必須ではないですが、ソースコードに一貫性を持たせるためにいくつかの規約を決めています。

== 9.1.1 字下げ ==
字下げはプログラムの構造をわかりやすくするために重要であり、多くのエディタではタブを押下することによって字下げを行います。しかし、タブの幅は設定により異なり、ソースコードを開く環境によってはスタイルを崩す原因となる可能性があります。そのため、KVSでは、字下げはタブ文字を利用せず、半角スペース４文字で表現することとします。

{{{
// Good
void Func()
{
    int x;
    int y;
    DoSomething();
}

// Bad
void Func()
{
int x;
int y;
DoSomething();
}
}}}

== 9.1.2 中括弧の位置 ==
処理ブロックの範囲を表現する中括弧の位置については、様々なスタイルが存在しますが、KVSでは次のようにスタイルを統一します。中括弧の開始位置（開き中括弧（"{"）の位置）は、if文やfor文などの制御文の後ろではなく、その次の行に改行し、直前の行の先頭文字と同じに位置に置くこととします。また、閉じ中括弧（"}"）は、処理ブロックの最後から独立した位置に置くこととします。

{{{
// Good
if ( x == y )
{
   DoSomething();
}

for ( int i = 0; i < n; i++ )
{
   DoSomething();
}

// Bad
if ( x == y ) {
   DoSomething();
}

for ( int i = 0; i < n; i++ ) {
   DoSomething();
}
}}}

== 9.1.3 制御文の括弧の位置 ==
制御文の条件などを記述するための括弧については、ifやforなどの命令の後ろにスペースを空け、空き括弧（"("）を置くこととし、その直後の条件式等は空き括弧の後ろにスペースを明けて記述することとします。また、閉じ括弧（")"）の直前にもスペースを空けることとします。

{{{
// Good
if ( x == y )
for ( int i = 0; i < n; i++ )
while ( x < y )

// Bad
if(x == y)
for(int i = 0; i < n; i++)
while(x < y)
}}}

== 9.1.4 return文の括弧 ==
プログラムにおいて、return文は関数の終了を表し、同時に呼び出しもとに値（戻り値）を返す役割を持ちます。一般的に、return文の戻り値は括弧を付けて記述される場合と付けずに記述される場合がありますが、KVSでは括弧を付けずに記述することとします。

{{{
// Good
return x;

// Bad
return( x );
}}}

== 9.1.5 引数なしの関数の定義 ==
引数を持たない関数を定義する場合、明示的にvoidと記述することがありますが、KVSではvoidを付けず括弧のみを記述することとします。

{{{
// Good
void Func()
{
    DoSomething();
}

// Bad
void Func( void )
{
    DoSomething();
}
}}}